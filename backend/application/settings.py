"""
Django settings for application project.

Generated by 'django-admin startproject' using Django 3.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
import sys
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# ================================================= #
# ******************** التكوين الديناميكي ******************** #
# ================================================= #



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure--z8%exyzt7e_%i@1+#1mm=%lb5=^fx_57=1@a+_y7bg5-w%)sm"
# التهيئةpluginsسد -في المسار إلى متغيرات البيئة
PLUGINS_PATH = os.path.join(BASE_DIR, "plugins")
sys.path.insert(0, os.path.join(PLUGINS_PATH))

[
    sys.path.insert(0, os.path.join(PLUGINS_PATH, ele))
    for ele in os.listdir(PLUGINS_PATH)
    if os.path.isdir(os.path.join(PLUGINS_PATH, ele)) and not ele.startswith("__")
]

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = locals().get("DEBUG", True)
ALLOWED_HOSTS = locals().get("ALLOWED_HOSTS", ["*"])

# Application definition

INSTALLED_APPS = [
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_comment_migrate",
    "rest_framework",
    "django_filters",
    "corsheaders",  # تسجيل الصليب -domainapp
    'rest_framework_simplejwt.token_blacklist',
    "dvadmin.system",
    "drf_yasg",
    "captcha",
    'channels',
]

MIDDLEWARE = [
    "dvadmin.utils.middleware.HealthCheckMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",  # الأجزاء الصليب
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "dvadmin.utils.middleware.ApiLoggingMiddleware",
]

ROOT_URLCONF = "application.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "application.wsgi.application"

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite5'),
    }
}

AUTH_USER_MODEL = "system.Users"
USERNAME_FIELD = "username"

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = "zh-hans"

TIME_ZONE = "Asia/Shanghai"

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = "/static/"
# # يثبتdjangoدليل الملف الثابت
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

MEDIA_ROOT = "media"  # دليل تحت المشروع
MEDIA_URL = "/media/"  # وSTATIC_URLمشابه，حدد المستخدم لتمرير هذاurlابحث عن ملف

# جمع الملفات الثابتة，يجب MEDIA_ROOT,STATICFILES_DIRSالتعليقات التوضيحية
# python manage.py collectstatic
# STATIC_ROOT=os.path.join(BASE_DIR,'static')

# ================================================= #
# ******************* التكوين المتقاطع ******************* #
# ================================================= #

# كل التكوين المسموح به
CORS_ORIGIN_ALLOW_ALL = True
# يسمحcookie
CORS_ALLOW_CREDENTIALS = True  # يشير في زيارة المتقاطع，ما إذا كانت الواجهة الخلفية تدعم الحقcookieعملية

# ================================================= #
# ********************* channelsإعدادات ******************* #
# ================================================= #
ASGI_APPLICATION = 'application.asgi.application'
if not locals().get('REDIS_HOST', ""):
    CHANNEL_LAYERS = {
        "default": {
            "BACKEND": "channels.layers.InMemoryChannelLayer"
        }
    }
else:
    REDIS_URL = locals().get('REDIS_URL', "")
    CHANNEL_LAYERS = {
        'default': {
            'BACKEND': 'channels_redis.core.RedisChannelLayer',
            'CONFIG': {
                "hosts": [(REDIS_URL)],  # يجب تعديلها
            },
        },
    }

# # ================================================= #
# # ********************* 日志إعدادات ******************* #
# # ================================================= #
# # log إعدادات部分BEGIN #
SERVER_LOGS_FILE = os.path.join(BASE_DIR, "logs", "server.log")
ERROR_LOGS_FILE = os.path.join(BASE_DIR, "logs", "error.log")
LOGS_FILE = os.path.join(BASE_DIR, "logs")
if not os.path.exists(os.path.join(BASE_DIR, "logs")):
    os.makedirs(os.path.join(BASE_DIR, "logs"))

# شكل:[2020-04-22 23:33:01][micoservice.apps.ready():16] [INFO] هذا سجل:
# شكل:[تاريخ][الوحدة النمطية.اسم الوظيفة():رقم السطر] [مستوى] معلومة
STANDARD_LOG_FORMAT = (
    "[%(asctime)s][%(name)s.%(funcName)s():%(lineno)d] [%(levelname)s] %(message)s"
)
CONSOLE_LOG_FORMAT = (
    "[%(asctime)s][%(name)s.%(funcName)s():%(lineno)d] [%(levelname)s] %(message)s"
)
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "standard": {"format": STANDARD_LOG_FORMAT},
        "console": {
            "format": CONSOLE_LOG_FORMAT,
            "datefmt": "%Y-%m-%d %H:%M:%S",
        },
        "file": {
            "format": CONSOLE_LOG_FORMAT,
            "datefmt": "%Y-%m-%d %H:%M:%S",
        },
    },
    "handlers": {
        "file": {
            "level": "INFO",
            "class": "logging.handlers.RotatingFileHandler",
            "filename": SERVER_LOGS_FILE,
            "maxBytes": 1024 * 1024 * 100,  # 100 MB
            "backupCount": 5,  # أقصى نسخ احتياطي5indivual
            "formatter": "standard",
            "encoding": "utf-8",
        },
        "error": {
            "level": "ERROR",
            "class": "logging.handlers.RotatingFileHandler",
            "filename": ERROR_LOGS_FILE,
            "maxBytes": 1024 * 1024 * 100,  # 100 MB
            "backupCount": 3,  # أقصى نسخ احتياطي3indivual
            "formatter": "standard",
            "encoding": "utf-8",
        },
        "console": {
            "level": "INFO",
            "class": "logging.StreamHandler",
            "formatter": "console",
        },

    },
    "loggers": {
        "": {
            "handlers": ["console", "error", "file"],
            "level": "INFO",
        },
        "django": {
            "handlers": ["console", "error", "file"],
            "level": "INFO",
            "propagate": False,
        },
        'django.db.backends': {
            'handlers': ["console", "error", "file"],
            'propagate': False,
            'level': "INFO"
        },
        "uvicorn.error": {
            "level": "INFO",
            "handlers": ["console", "error", "file"],
        },
        "uvicorn.access": {
            "handlers": ["console", "error", "file"],
            "level": "INFO"
        },
    },
}

# ================================================= #
# *************** REST_FRAMEWORKإعدادات *************** #
# ================================================= #

REST_FRAMEWORK = {
    "DATETIME_FORMAT": "%Y-%m-%d %H:%M:%S",  # تاريخ时间شكلإعدادات
    "DATE_FORMAT": "%Y-%m-%d",
    "DEFAULT_FILTER_BACKENDS": (
        # 'django_filters.rest_framework.DjangoFilterBackend',
        "dvadmin.utils.filters.CustomDjangoFilterBackend",
        "rest_framework.filters.SearchFilter",
        "rest_framework.filters.OrderingFilter",
    ),
    "DEFAULT_PAGINATION_CLASS": "dvadmin.utils.pagination.CustomPagination",  # ترقيم الصفحات المخصصة
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
        "rest_framework.authentication.SessionAuthentication",
    ),
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",  # فقط بعد تحديد هوية الهوية لتحديد هوية المستخدم يمكن الوصول إليها
        # 'rest_framework.permissions.IsAdminUser', # is_staff=Trueالقدرة على الوصول —— المسؤول(طاقم عمل)سلطة
        # 'rest_framework.permissions.AllowAny', # يسمحالجميع
        # 'rest_framework.permissions.IsAuthenticatedOrReadOnly', # هوية أو اقرأ الزيارة فقط(self.list,self.retrieve)
    ],
    "EXCEPTION_HANDLER": "dvadmin.utils.exception.CustomExceptionHandler",  # علاج غير طبيعي مخصص
}
# ================================================= #
# ******************** 登录方式إعدادات ******************** #
# ================================================= #

AUTHENTICATION_BACKENDS = ["dvadmin.utils.backends.CustomBackend"]
# ================================================= #
# ****************** simplejwtإعدادات ***************** #
# ================================================= #
from datetime import timedelta

SIMPLE_JWT = {
    # tokenوقت فعال
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=60),
    # tokenوقت فعال بعد التحديث
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),
    # يثبت前缀
    "AUTH_HEADER_TYPES": ("JWT",),
    "ROTATE_REFRESH_TOKENS": True,
    'BLACKLIST_AFTER_ROTATION': True,
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
}

# ====================================#
# ****************swagger************#
# ====================================#
SWAGGER_SETTINGS = {
    # النمط الأساسي
    "SECURITY_DEFINITIONS": {"basic": {"type": "basic"}},
    # إذا كنت بحاجة إلى تسجيل الدخول للتحقق من مستند الواجهة, رابط لتسجيل الدخولrestframeworkمهتم ذاتي.
    "LOGIN_URL": "apiLogin/",
    # 'LOGIN_URL': 'rest_framework:login',
    "LOGOUT_URL": "rest_framework:logout",
    # 'DOC_EXPANSION': None,
    # 'SHOW_REQUEST_HEADERS':True,
    # 'USE_SESSION_AUTH': True,
    # 'DOC_EXPANSION': 'list',
    # يتم ترتيب قائمة مستندات الواجهة بترتيب الرسائل الأولى
    "APIS_SORTER": "alpha",
    # إذا كان الدعمjsonيُقدِّم, ثم يحتوي وثيقة الواجهة علىjsonمربع الإدخال
    "JSON_EDITOR": True,
    # فرز خطاب قائمة الأسلوب
    "OPERATIONS_SORTER": "alpha",
    "VALIDATOR_URL": None,
    "AUTO_SCHEMA_TYPE": 2,  # أساس الحزمةurlالتسلسل الهرمي，0、1 أو 2 طبقة
    "DEFAULT_AUTO_SCHEMA_CLASS": "dvadmin.utils.swagger.CustomSwaggerAutoSchema",
}

# ================================================= #
# **************** 验证码إعدادات  ******************* #
# ================================================= #
CAPTCHA_IMAGE_SIZE = (160, 60)  # يثبت captcha حجم الصورة
CAPTCHA_LENGTH = 4  # 字符indivual数
CAPTCHA_TIMEOUT = 1  # نفذ الوقت(minutes)
CAPTCHA_OUTPUT_FORMAT = "%(image)s %(text_field)s %(hidden_field)s "
CAPTCHA_FONT_SIZE = 40  # حجم الخط
CAPTCHA_FOREGROUND_COLOR = "#64DAAA"  # احتمال
CAPTCHA_BACKGROUND_COLOR = "#F5F7F4"  # خلفية
CAPTCHA_NOISE_FUNCTIONS = (
    "captcha.helpers.noise_arcs",  # سلك
    # "captcha.helpers.noise_dots",  # نقطة
)
# CAPTCHA_CHALLENGE_FUNCT = 'captcha.helpers.random_char_challenge' #رمز التحقق من الرسالة
CAPTCHA_CHALLENGE_FUNCT = "captcha.helpers.math_challenge"  # إضافة ، الطرح ، الضرب ، إزالة رمز التحقق

# ================================================= #
# ******************** 其他إعدادات ******************** #
# ================================================= #

DEFAULT_AUTO_FIELD = "django.db.models.AutoField"
# سواء لبدءAPIسجل السجل
API_LOG_ENABLE = locals().get("API_LOG_ENABLE", True)
# API سجل السجل的请求方式
API_LOG_METHODS = locals().get("API_LOG_METHODS", ["POST", "UPDATE", "DELETE", "PUT"])
# API_LOG_METHODS = 'ALL' # ['POST', 'DELETE']
# 在操作日志中详细记录的请求الوحدة النمطية映射
API_MODEL_MAP = locals().get("API_MODEL_MAP", {
    "/token/": "登录الوحدة النمطية",
    "/api/login/": "登录الوحدة النمطية",
    "/api/logout/": "登录الوحدة النمطية",
})

DJANGO_CELERY_BEAT_TZ_AWARE = False
CELERY_TIMEZONE = "Asia/Shanghai"  # celery مشكلة المنطقة الزمنية
# ضغط الصفحة الثابتة
STATICFILES_STORAGE = "whitenoise.storage.CompressedStaticFilesStorage"

ALL_MODELS_OBJECTS = []  # الجميعapp models هدف

# التهيئة需要执行的列表，用来التهيئة后执行
INITIALIZE_LIST = []
INITIALIZE_RESET_LIST = []
# بادئة
TABLE_PREFIX = locals().get('TABLE_PREFIX', "")
# 系统إعدادات
SYSTEM_CONFIG = {}
# 字典إعدادات
DICTIONARY_CONFIG = {}

# ================================================= #
# ******************** قابس -فيإعدادات ******************** #
# ================================================= #
# مشاركة المستأجرapp
TENANT_SHARED_APPS = []
# قابس -في urlpatterns
PLUGINS_URL_PATTERNS = []
# ********** 一键导入قابس -فيإعدادات开始 **********
# على سبيل المثال:
# from dvadmin_upgrade_center.settings import *   # مركز الترقية
# from dvadmin_celery.settings import *           # celery مهمة غير متزامنة
# from dvadmin_sms.settings import *              # خدمة الرسائل القصيرة
# from dvadmin_third.settings import *            # تسجيل دخول رمز المسح
# from dvadmin_uniapp.settings import *           # UniAppنهاية الطريق
# from dvadmin_ak_sk.settings import *            # إدارة الإدارة السرية
# from dvadmin_tenants.settings import *          # إدارة المستأجر
# from dvadmin_cloud_storage.settings import * # تخزين السحابة
#from dvadmin_low_code_crud.settings import *  # تشغيل منخفضة الرمز
# ...

# ********** 一键导入قابس -فيإعدادات结束 **********
